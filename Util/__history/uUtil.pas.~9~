unit uUtil;

interface

uses
  SysUtils, Classes, DB, ADODB, ComObj, Variants, ActiveX;

Type
  TUtil = Class

public
  procedure exportarPlanilha(sql :TADOQuery);
  
End;


implementation

{ TUtil }

{Método geral para exportar grid em Excel}
procedure TUtil.exportarPlanilha(sql: TADOQuery);
var
  linha, coluna: Integer;
  valorCampo, dataFormatada: String;
  celula: Variant;
  MSExcel, ExcelBook, ExcelSheet: OleVariant;
begin
  MSExcel    := CreateOLEObject( 'Excel.Application' ); // Cria uma aplicação do Excel
  ExcelBook  := MSExcel.WorkBooks.Add;                  // Adiciona uma pasta na planilha
  ExcelSheet := ExcelBook.WorkSheets.Add;
  ExcelSheet.Range['A1','H1'].Merge(EmptyParam);
  ExcelSheet.Cells[ 1,1 ].Font.Size      := 12;
  ExcelSheet.Cells[ 1,1 ].Interior.Color := $00ffcf9c;
  ExcelSheet.Cells[ 1,1 ].Font.Bold      := True;
  Celula       := ExcelSheet.Cells[ 1,1 ];
  Celula.Value := 'Relatório de Classificação de Remessas';
  Linha := 3; // Dados são inseridos a partir desta linha
  Screen.Cursor := crHourGlass;

  if (quCarrega.RecordCount > 0) then begin
    for Coluna := 1 to quCarrega.FieldCount do
    begin
      ValorCampo := quCarrega.Fields[coluna - 1].DisplayLabel;
      MSExcel.cells[2,coluna] := ValorCampo; // Nome das colunas
      MSExcel.Cells[2,coluna].Font.Color := clWhite;
      MSExcel.Cells[2,coluna].Font.Bold := True;
      MSExcel.Cells[2,coluna].Interior.Color := clBlue;
    end;


    For Coluna := 0 to (quCarrega.FieldCount - 1) do
    begin
      MSExcel.Cells[Linha,Coluna + 1] := quCarrega.Fields[Coluna].DisplayLabel;
      Case quCarrega.Fields[Coluna].DataType Of
        ftDate    : MSExcel.Columns.Columns[ Coluna + 1 ].NumberFormat := 'dd/mm/aaaa';
        ftDateTime: MSExcel.Columns.Columns[ Coluna + 1 ].NumberFormat := 'dd/mm/aaaa';
        ftString  : MSExcel.Columns.Columns[ Coluna + 1 ].NumberFormat := '@';
        ftCurrency: MSExcel.Columns.Columns[ Coluna + 1 ].NumberFormat := '###0,00';
        ftFloat   : MSExcel.Columns.Columns[ Coluna + 1 ].NumberFormat := '###0';
        ftBCD     : MSExcel.Columns.Columns[ Coluna + 1 ].NumberFormat := '@';
        ftSmallint: MSExcel.Columns.Columns[ Coluna + 1 ].NumberFormat := '###0,00';
      end;
    end;

    quCarrega.First;
    quCarrega.DisableControls;
    try
      while not quCarrega.Eof do
      begin
        try
          for Coluna := 0 to (quCarrega.FieldCount - 1) do  begin
            if not VarIsEmpty(quCarrega.Fields[coluna].Value) then
              MSExcel.Cells[Linha,Coluna + 1] := Trim(VarToStr(quCarrega.Fields[Coluna].Value))
            else
              MSExcel.Cells[Linha,Coluna + 1] := quCarrega.Fields[Coluna].Value;

            if (Coluna = 1) then begin
                MSExcel.Cells[Linha,Coluna + 1] := tData(quCarrega.Fields[Coluna].Value);
            end;

          end;
           quCarrega.Next;
           Inc(Linha);
        finally
        end;
      end;
    finally
      quCarrega.EnableControls;
    end;
  end;
  MSExcel.Columns.AutoFit;
  MSExcel.Visible := True;
  Screen.Cursor := crDefault;
end;

end.
